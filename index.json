{
  "api/Unosquare.Labs.EmbedIOwin.html": {
    "href": "api/Unosquare.Labs.EmbedIOwin.html",
    "title": "Namespace Unosquare.Labs.EmbedIOwin | Unosquare EmbedIO Extras",
    "keywords": "Namespace Unosquare.Labs.EmbedIOwin Classes PeopleController PeopleController.Person A simple model representing a person Program Sample Owin-EmbedIO Startup Startup object"
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.BasicAuthorizationServerProvider.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.BasicAuthorizationServerProvider.html",
    "title": "Class BasicAuthorizationServerProvider | Unosquare EmbedIO Extras",
    "keywords": "Class BasicAuthorizationServerProvider Basic Authorization Server Provider implementation Inheritance System.Object BasicAuthorizationServerProvider Implements IAuthorizationServerProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.BearerToken Syntax public class BasicAuthorizationServerProvider : IAuthorizationServerProvider Methods GetExpirationDate() Gets a Expiration Date Declaration public long GetExpirationDate() Returns Type Description System.Int64 Ticks until expiration date ValidateClientAuthentication(ValidateClientAuthenticationContext) Validates a Client Authentication Declaration public Task ValidateClientAuthentication(ValidateClientAuthenticationContext context) Parameters Type Name Description ValidateClientAuthenticationContext context The context. Returns Type Description System.Threading.Tasks.Task Implements IAuthorizationServerProvider"
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.BearerToken.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.BearerToken.html",
    "title": "Class BearerToken | Unosquare EmbedIO Extras",
    "keywords": "Class BearerToken Represents a Bearer Token JSON response Inheritance System.Object BearerToken Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.BearerToken Syntax public class BearerToken Properties ExpirationDate Expiration Date Declaration public long ExpirationDate { get; set; } Property Value Type Description System.Int64 Token The JsonWebToken Declaration public string Token { get; set; } Property Value Type Description System.String TokenType The Token type Declaration public string TokenType { get; set; } Property Value Type Description System.String Username Client username Declaration public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.IAuthorizationServerProvider.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.IAuthorizationServerProvider.html",
    "title": "Interface IAuthorizationServerProvider | Unosquare EmbedIO Extras",
    "keywords": "Interface IAuthorizationServerProvider Authorization Server Provider interface Namespace : Unosquare.Labs.EmbedIO.BearerToken Syntax public interface IAuthorizationServerProvider Methods GetExpirationDate() Gets a Expiration Date Declaration long GetExpirationDate() Returns Type Description System.Int64 Ticks until expiration date ValidateClientAuthentication(ValidateClientAuthenticationContext) Validates a Client Authentication Declaration Task ValidateClientAuthentication(ValidateClientAuthenticationContext context) Parameters Type Name Description ValidateClientAuthenticationContext context The context. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.BearerToken | Unosquare EmbedIO Extras",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.BearerToken Classes BasicAuthorizationServerProvider Basic Authorization Server Provider implementation BearerToken Represents a Bearer Token JSON response BearerTokenModule EmbedIO module to allow authorizations with Bearer Tokens Extensions Extension methods ValidateClientAuthenticationContext Context to share data with AuthorizationServerProvider Interfaces IAuthorizationServerProvider Authorization Server Provider interface"
  },
  "api/Unosquare.Labs.EmbedIO.JsonServer.html": {
    "href": "api/Unosquare.Labs.EmbedIO.JsonServer.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.JsonServer | Unosquare EmbedIO Extras",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.JsonServer Classes JsonServerModule JsonServer Module"
  },
  "api/Unosquare.Labs.EmbedIO.LiteLibWebApi.html": {
    "href": "api/Unosquare.Labs.EmbedIO.LiteLibWebApi.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.LiteLibWebApi | Unosquare EmbedIO Extras",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.LiteLibWebApi Classes LiteLibModule<T> Represents a EmbedIO Module to create an automatic WebApi handler for each IDbSet from a LiteLib context."
  },
  "api/Unosquare.Labs.EmbedIO.Markdown.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Markdown.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.Markdown | Unosquare EmbedIO Extras",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.Markdown Classes MarkdownStaticModule The Markdown Static Module takes in a static markdown file and converts it into HTML before returning a response. It will accept markdown/html/htm extensions"
  },
  "api/Unosquare.Labs.EmbedIO.OwinMiddleware.OwinServerFactory.html": {
    "href": "api/Unosquare.Labs.EmbedIO.OwinMiddleware.OwinServerFactory.html",
    "title": "Class OwinServerFactory | Unosquare EmbedIO Extras",
    "keywords": "Class OwinServerFactory Server Factory Inheritance System.Object OwinServerFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.OwinMiddleware Syntax public class OwinServerFactory Fields ServerFactoryName Server Factory Name to be used in StartOptions Declaration public static string ServerFactoryName Field Value Type Description System.String Methods Create(Func<IDictionary<String, Object>, Task>, IDictionary<String, Object>) Creates a new WebServer Declaration public static IDisposable Create(Func<IDictionary<string, object>, Task> app, IDictionary<string, object> properties) Parameters Type Name Description System.Func < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Threading.Tasks.Task > app OWIN App instance System.Collections.Generic.IDictionary < System.String , System.Object > properties Returns Type Description System.IDisposable Initialize(IDictionary<String, Object>) Initialize a new Factory Declaration public static void Initialize(IDictionary<string, object> properties) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > properties"
  },
  "api/Unosquare.Labs.EmbedIO.OwinMiddleware.html": {
    "href": "api/Unosquare.Labs.EmbedIO.OwinMiddleware.html",
    "title": "Namespace Unosquare.Labs.EmbedIO.OwinMiddleware | Unosquare EmbedIO Extras",
    "keywords": "Namespace Unosquare.Labs.EmbedIO.OwinMiddleware Classes Extensions Extension methods MiddlewareOwin EmbedIO Middleware to use with OWIN OwinModule Inject Owin Middleware to EmbedIO OwinServerFactory Server Factory"
  },
  "api/Unosquare.Labs.EmbedIOwin.PeopleController.Person.html": {
    "href": "api/Unosquare.Labs.EmbedIOwin.PeopleController.Person.html",
    "title": "Class PeopleController.Person | Unosquare EmbedIO Extras",
    "keywords": "Class PeopleController.Person A simple model representing a person Inheritance System.Object PeopleController.Person Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIOwin Syntax public class Person Properties Age Declaration public int Age { get; set; } Property Value Type Description System.Int32 EmailAddress Declaration public string EmailAddress { get; set; } Property Value Type Description System.String Key Declaration public int Key { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String PhotoUrl Declaration public string PhotoUrl { get; set; } Property Value Type Description System.String"
  },
  "README.html": {
    "href": "README.html",
    "title": "EmbedIO Extras | Unosquare EmbedIO Extras",
    "keywords": "EmbedIO Extras ‚≠ê Please star this project if you find it useful! Additional Modules showing how to extend EmbedIO. Feel free to use these modules in your projects. Bearer Token Module Provides the ability to authenticate requests via a Bearer Token. This module creates a Token endpoint (at the predefined '/token' path) and all you need to do is provide a user validation delegate which authenticates the user. The module will create a JsonWebToken which can then be used by your client application in firther requests. The module can check all incoming requests or a predefined set of paths. The standard header in use is the HTTP Authorization header . You can easily add Bearer Token to your EmbedIO application using a Basic Authorization Server Provider or writing your own: // Create basic authentication provider var basicAuthProvider = new BasicAuthorizationServerProvider(); // You can set which routes to check; an empty routes array will secure entire server var routes = new[] { \"/secure.html\" }; // Create Webserver and attach the Bearer Token Module var server = WebServer.Create(\"http://localhost:9696/\"); server.RegisterModule(new BearerTokenModule(basicAuthProvider, routes)); Nuget installation PM> Install-Package EmbedIO.BearerToken Json Server Module Based on the JsonServer's project, with this module you are able to simply specify a JSON file as a database and use standard REST methods to create, update, retrieve and delete records from it. // Create Webserver and attach Json's Server var server = WebServer.Create(\"http://localhost:9696/\"); server.RegisterModule(new JsonServerModule(jsonPath: Path.Combine(@\"c:\\web\", \"database.json\"))); Supported methods: GET collection (//yourhost/entity) GET single (//yourhost/entity/1 where 1 is the ID) POST (//yourhost/entity with POST body the JSON object) PUT (//yourhost/entity/1 with POST body the JSON object) DELETE (//yourhost/entity/1 where 1 is the ID) LiteLib WebAPI Similar to Json Server Module, but you can serve a sqlite file with all HTTP verbs. // Create Webserver and attach Json's Server var server = WebServer.Create(\"http://localhost:9696/\"); server.RegisterModule(new LiteLibModule<TestDbContext>(new TestDbContext(), \"/dbapi/\")); Supported methods: GET collection (//yourhost/entity) GET single (//yourhost/entity/1 where 1 is the ID) POST (//yourhost/entity with POST body the JSON object) PUT (//yourhost/entity/1 with POST body the JSON object) DELETE (//yourhost/entity/1 where 1 is the ID) Nuget installation PM> Install-Package EmbedIO.LiteLibWebApi Markdown Static Module The Markdown Static Module takes in a static markdown file and converts it into HTML before returning a response. It will accept markdown/html/htm extensions (This could become middleware later). // Create Webserver and attach Markdown Static Module var server = WebServer.Create(\"http://localhost:9696/\"); server.RegisterModule(new MarkdownStaticModule(@\"c:\\web\")); OWIN Integration The support to OWIN is not under development, and it may not work correctly. EmbedIO can use the OWIN platform in two different ways: You can use EmbedIO modules within an OWIN Server. In other words, host your application with an OWIN server and make use of EmbedIO modules. public class Program { /// <summary> /// Entry point /// </summary> /// <param name=\"args\"></param> private static void Main(string[] args) { var options = new StartOptions { ServerFactory = OwinServerFactory.ServerFactoryName, Port = 4578 }; using (WebApp.Start<Startup>(options)) { OwinServerFactory.Log.DebugFormat(\"Running a http server on port {0}\", options.Port); Console.ReadKey(); } } } /// <summary> /// Startup object /// </summary> public class Startup { /// <summary> /// Configure the OwinApp /// </summary> /// <param name=\"app\"></param> public void Configuration(IAppBuilder app) { app.UseErrorPage(); app.UseDirectoryBrowser(); app.UseRazor(InitRoutes); // Attach a EmbedIO WebAPI Controller directly to OwinApp Configuration app.UseWebApi(typeof (PeopleController).Assembly); } /// <summary> /// Initialize the Razor files /// </summary> /// <param name=\"table\"></param> public static void InitRoutes(IRouteTable table) { table .AddFileRoute(\"/about/me\", \"Views/about.cshtml\", new { Name = \"EmbedIO Razor\", Date = DateTime.UtcNow }); } } You can also use OWN middleware within EmbedIO. In other words, you can do stuff like serving Razor views from EmbedIO. public class Program { /// <summary> /// Entry point /// </summary> /// <param name=\"args\"></param> private static void Main(string[] args) { // UseOwin() function returns Owin App for configuration using (var webServer = WebServer .Create(\"http://localhost:4578\") .WithWebApi(typeof (PeopleController).Assembly) .UseOwin((owinApp) => owinApp .UseDirectoryBrowser() .UseRazor(InitRoutes))) { webServer.RunAsync(); Console.ReadKey(); } } /// <summary> /// Initialize the Razor files /// </summary> /// <param name=\"table\"></param> public static void InitRoutes(IRouteTable table) { table .AddFileRoute(\"/about/me\", \"Views/about.cshtml\", new { Name = \"EmbedIO Razor\", Date = DateTime.UtcNow }); } } Nuget installation PM> Install-Package EmbedIO.OWIN"
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.BearerTokenModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.BearerTokenModule.html",
    "title": "Class BearerTokenModule | Unosquare EmbedIO Extras",
    "keywords": "Class BearerTokenModule EmbedIO module to allow authorizations with Bearer Tokens Inheritance System.Object BearerTokenModule Namespace : Unosquare.Labs.EmbedIO.BearerToken Syntax public class BearerTokenModule : WebModuleBase Constructors BearerTokenModule(IAuthorizationServerProvider, IEnumerable<String>, SymmetricSecurityKey, String) Initializes a new instance of the BearerTokenModule class. Declaration public BearerTokenModule(IAuthorizationServerProvider authorizationServerProvider, IEnumerable<string> routes = null, SymmetricSecurityKey secretKey = null, string endpoint = \"/token\") Parameters Type Name Description IAuthorizationServerProvider authorizationServerProvider The authorization server provider. System.Collections.Generic.IEnumerable < System.String > routes The routes. SymmetricSecurityKey secretKey The secret key. System.String endpoint The endpoint. Properties Name Returns Module Name Declaration public override string Name { get; } Property Value Type Description System.String"
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.Extensions.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.Extensions.html",
    "title": "Class Extensions | Unosquare EmbedIO Extras",
    "keywords": "Class Extensions Extension methods Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.BearerToken Syntax public static class Extensions Methods GetSecurityToken(HttpListenerContext, SymmetricSecurityKey) Gets the security token. Declaration public static SecurityToken GetSecurityToken(this HttpListenerContext context, SymmetricSecurityKey secretKey = null) Parameters Type Name Description HttpListenerContext context The context. SymmetricSecurityKey secretKey The secret key. Returns Type Description SecurityToken The security token from the HTTP Context GetSecurityToken(HttpListenerContext, String) Gets the of the current context. Returns null when the token is not found or not validated. Declaration public static SecurityToken GetSecurityToken(this HttpListenerContext context, string secretKey = null) Parameters Type Name Description HttpListenerContext context The context. System.String secretKey The secret key. Returns Type Description SecurityToken The security token from the HTTP Context GetValidationContext(HttpListenerContext) Retrieves a ValidationContext Declaration public static ValidateClientAuthenticationContext GetValidationContext(this HttpListenerContext context) Parameters Type Name Description HttpListenerContext context The context. Returns Type Description ValidateClientAuthenticationContext The Validation Context from the HTTP Context Rejected(HttpListenerContext) Rejects a authentication challenge Declaration public static void Rejected(this HttpListenerContext context) Parameters Type Name Description HttpListenerContext context The context. UseBearerToken(WebServer, IAuthorizationServerProvider, IEnumerable<String>, SymmetricSecurityKey) Fluent-like method to attach BearerToken Declaration public static void UseBearerToken(this WebServer webserver, IAuthorizationServerProvider authorizationProvider = null, IEnumerable<string> routes = null, SymmetricSecurityKey secretKey = null) Parameters Type Name Description WebServer webserver The webserver. IAuthorizationServerProvider authorizationProvider The authorization provider. System.Collections.Generic.IEnumerable < System.String > routes The routes. SymmetricSecurityKey secretKey The secret key."
  },
  "api/Unosquare.Labs.EmbedIO.BearerToken.ValidateClientAuthenticationContext.html": {
    "href": "api/Unosquare.Labs.EmbedIO.BearerToken.ValidateClientAuthenticationContext.html",
    "title": "Class ValidateClientAuthenticationContext | Unosquare EmbedIO Extras",
    "keywords": "Class ValidateClientAuthenticationContext Context to share data with AuthorizationServerProvider Inheritance System.Object ValidateClientAuthenticationContext Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.BearerToken Syntax public class ValidateClientAuthenticationContext Constructors ValidateClientAuthenticationContext(HttpListenerContext) Initializes a new instance of the ValidateClientAuthenticationContext class. Declaration public ValidateClientAuthenticationContext(HttpListenerContext httpContext) Parameters Type Name Description HttpListenerContext httpContext The HTTP context. Exceptions Type Condition System.ArgumentNullException httpContext Properties ClientId The Client Id Declaration public string ClientId { get; protected set; } Property Value Type Description System.String HasError Flags if the Validation has errors Declaration public bool HasError { get; protected set; } Property Value Type Description System.Boolean HttpContext Http Context instance Declaration public HttpListenerContext HttpContext { get; protected set; } Property Value Type Description HttpListenerContext IsValidated Indicates if the Validation is right Declaration public bool IsValidated { get; protected set; } Property Value Type Description System.Boolean StandardClaims Claims Declaration public ClaimsIdentity StandardClaims { get; set; } Property Value Type Description System.Security.Claims.ClaimsIdentity Methods GetToken(SymmetricSecurityKey) Retrieve JsonWebToken Declaration public string GetToken(SymmetricSecurityKey secretKey) Parameters Type Name Description SymmetricSecurityKey secretKey The secret key. Returns Type Description System.String The token string Rejected() Rejects a validation Declaration public void Rejected() Validated() Validates credentials Declaration public void Validated() Validated(String) Validates credentials with clientId Declaration public void Validated(string clientId) Parameters Type Name Description System.String clientId The client identifier."
  },
  "api/Unosquare.Labs.EmbedIO.JsonServer.JsonServerModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.JsonServer.JsonServerModule.html",
    "title": "Class JsonServerModule | Unosquare EmbedIO Extras",
    "keywords": "Class JsonServerModule JsonServer Module Inheritance System.Object JsonServerModule Namespace : Unosquare.Labs.EmbedIO.JsonServer Syntax public class JsonServerModule : WebModuleBase Constructors JsonServerModule(String, String) Initializes a new instance of the JsonServerModule class. Declaration public JsonServerModule(string basePath = \"/api/\", string jsonPath = null) Parameters Type Name Description System.String basePath The base path. System.String jsonPath The json path. Properties BasePath Gets or sets the base path. Declaration public string BasePath { get; set; } Property Value Type Description System.String The base path. Data Dynamic database Declaration public dynamic Data { get; set; } Property Value Type Description System.Object JsonPath Default JSON file path Declaration public string JsonPath { get; set; } Property Value Type Description System.String Name Gets the Module's name Declaration public override string Name { get; } Property Value Type Description System.String Methods UpdateDataStore(Object) Updates JSON file in disk Declaration public void UpdateDataStore(object state) Parameters Type Name Description System.Object state The state."
  },
  "api/Unosquare.Labs.EmbedIO.LiteLibWebApi.LiteLibModule-1.html": {
    "href": "api/Unosquare.Labs.EmbedIO.LiteLibWebApi.LiteLibModule-1.html",
    "title": "Class LiteLibModule<T> | Unosquare EmbedIO Extras",
    "keywords": "Class LiteLibModule<T> Represents a EmbedIO Module to create an automatic WebApi handler for each IDbSet from a LiteLib context. Inheritance System.Object LiteLibModule<T> Namespace : Unosquare.Labs.EmbedIO.LiteLibWebApi Syntax public class LiteLibModule<T> : WebModuleBase where T : LiteDbContext Type Parameters Name Description T The type of LiteDbContext Constructors LiteLibModule(T, String) Initializes a new instance of the LiteLibModule<T> class. Declaration public LiteLibModule(T instance, string basePath = \"/api/\") Parameters Type Name Description T instance The instance. System.String basePath The base path. Properties Name Gets the name of this module. Declaration public override string Name { get; } Property Value Type Description System.String"
  },
  "api/Unosquare.Labs.EmbedIO.Markdown.MarkdownStaticModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.Markdown.MarkdownStaticModule.html",
    "title": "Class MarkdownStaticModule | Unosquare EmbedIO Extras",
    "keywords": "Class MarkdownStaticModule The Markdown Static Module takes in a static markdown file and converts it into HTML before returning a response. It will accept markdown/html/htm extensions Inheritance System.Object MarkdownStaticModule Namespace : Unosquare.Labs.EmbedIO.Markdown Syntax public class MarkdownStaticModule : WebModuleBase Constructors MarkdownStaticModule(String) Initializes a new instance of the MarkdownStaticModule class. Declaration public MarkdownStaticModule(string fileSystemPath) Parameters Type Name Description System.String fileSystemPath The file system path. Exceptions Type Condition System.ArgumentException Path '\" + fileSystemPath + \"' does not exist. Fields DefaultDocumentName Default document constant to \"index.markdown\" Declaration public const string DefaultDocumentName = \"index.markdown\" Field Value Type Description System.String Properties DefaultDocument Gets or sets the default document. Defaults to \"index.html\" Example: \"root.xml\" Declaration public string DefaultDocument { get; set; } Property Value Type Description System.String FileSystemPath Gets the file system path from which files are retrieved. Declaration public string FileSystemPath { get; protected set; } Property Value Type Description System.String Name Gets the name of this module. Declaration public override string Name { get; } Property Value Type Description System.String"
  },
  "api/Unosquare.Labs.EmbedIO.OwinMiddleware.Extensions.html": {
    "href": "api/Unosquare.Labs.EmbedIO.OwinMiddleware.Extensions.html",
    "title": "Class Extensions | Unosquare EmbedIO Extras",
    "keywords": "Class Extensions Extension methods Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIO.OwinMiddleware Syntax public static class Extensions Fields WebModulesKey EmbedIO WebModule Key Declaration public static string WebModulesKey Field Value Type Description System.String Methods UseEmbedIOCors(IAppBuilder, String, String, String) Use EmbedIO CORS implementation Declaration public static IAppBuilder UseEmbedIOCors(this IAppBuilder app, string origins = null, string headers = null, string methods = null) Parameters Type Name Description IAppBuilder app System.String origins System.String headers System.String methods Returns Type Description IAppBuilder UseHttpContext(IDictionary<String, Object>, HttpListenerContext) Fills Context information in Env vars Declaration public static IDictionary<string, object> UseHttpContext(this IDictionary<string, object> environment, HttpListenerContext context) Parameters Type Name Description IDictionary < System.String , System.Object > environment HttpListenerContext context Returns Type Description IDictionary < System.String , System.Object > UseOwin(WebServer, Func<IAppBuilder, IAppBuilder>) Generates an Owin App Declaration public static WebServer UseOwin(this WebServer webServer, Func<IAppBuilder, IAppBuilder> owinApp) Parameters Type Name Description WebServer webServer Func < IAppBuilder , IAppBuilder > owinApp Returns Type Description WebServer UseWebApi(IAppBuilder, Assembly) Uses the EmbedIO Web API. Declaration public static IAppBuilder UseWebApi(this IAppBuilder app, Assembly assembly) Parameters Type Name Description IAppBuilder app The application. Assembly assembly The assembly. Returns Type Description IAppBuilder UseWebSocket(IAppBuilder, Assembly) Uses the EmbedIO web socket. Declaration public static IAppBuilder UseWebSocket(this IAppBuilder app, Assembly assembly) Parameters Type Name Description IAppBuilder app The application. Assembly assembly The assembly. Returns Type Description IAppBuilder UseWebSocket(IAppBuilder, Type) Uses the EmbedIO web socket. Declaration public static IAppBuilder UseWebSocket(this IAppBuilder app, Type webSocketType) Parameters Type Name Description IAppBuilder app The application. Type webSocketType Type of the web socket. Returns Type Description IAppBuilder"
  },
  "api/Unosquare.Labs.EmbedIO.OwinMiddleware.MiddlewareOwin.html": {
    "href": "api/Unosquare.Labs.EmbedIO.OwinMiddleware.MiddlewareOwin.html",
    "title": "Class MiddlewareOwin | Unosquare EmbedIO Extras",
    "keywords": "Class MiddlewareOwin EmbedIO Middleware to use with OWIN Inheritance System.Object MiddlewareOwin Namespace : Unosquare.Labs.EmbedIO.OwinMiddleware Syntax public class MiddlewareOwin : Middleware Constructors MiddlewareOwin(Func<IDictionary<String, Object>, Task>, IDictionary<String, Object>) Creates a new Middleware instance Declaration public MiddlewareOwin(Func<IDictionary<string, object>, Task> app, IDictionary<string, object> properties) Parameters Type Name Description System.Func < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Threading.Tasks.Task > app System.Collections.Generic.IDictionary < System.String , System.Object > properties Fields Environment Environment variables Declaration protected IDictionary<string, object> Environment Field Value Type Description System.Collections.Generic.IDictionary < System.String , System.Object > OwinApp Owin App instance Declaration protected Func<IDictionary<string, object>, Task> OwinApp Field Value Type Description System.Func < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Threading.Tasks.Task > Methods Invoke(MiddlewareContext) Invokes Middleware Declaration public override Task Invoke(MiddlewareContext context) Parameters Type Name Description MiddlewareContext context Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Unosquare.Labs.EmbedIO.OwinMiddleware.OwinModule.html": {
    "href": "api/Unosquare.Labs.EmbedIO.OwinMiddleware.OwinModule.html",
    "title": "Class OwinModule | Unosquare EmbedIO Extras",
    "keywords": "Class OwinModule Inject Owin Middleware to EmbedIO Inheritance System.Object OwinModule Namespace : Unosquare.Labs.EmbedIO.OwinMiddleware Syntax public class OwinModule : WebModuleBase Constructors OwinModule(Func<IAppBuilder, IAppBuilder>) Init a Owin App into EmbedIO Declaration public OwinModule(Func<IAppBuilder, IAppBuilder> appConfig) Parameters Type Name Description System.Func < IAppBuilder , IAppBuilder > appConfig Properties Name Module's name Declaration public override string Name { get; } Property Value Type Description System.String"
  },
  "api/Unosquare.Labs.EmbedIOwin.PeopleController.html": {
    "href": "api/Unosquare.Labs.EmbedIOwin.PeopleController.html",
    "title": "Class PeopleController | Unosquare EmbedIO Extras",
    "keywords": "Class PeopleController Inheritance System.Object PeopleController Namespace : Unosquare.Labs.EmbedIOwin Syntax public class PeopleController : WebApiController Fields People Declaration public static List<PeopleController.Person> People Field Value Type Description List < PeopleController.Person > Methods GetPeople(WebServer, HttpListenerContext) Gets the people. This will respond to GET http://localhost:9696/api/people/ GET http://localhost:9696/api/people/1 GET http://localhost:9696/api/people/{n} Notice the wildcard is important Declaration public bool GetPeople(WebServer server, HttpListenerContext context) Parameters Type Name Description WebServer server The server. HttpListenerContext context The context. Returns Type Description System.Boolean"
  },
  "api/Unosquare.Labs.EmbedIOwin.Program.html": {
    "href": "api/Unosquare.Labs.EmbedIOwin.Program.html",
    "title": "Class Program | Unosquare EmbedIO Extras",
    "keywords": "Class Program Sample Owin-EmbedIO Inheritance System.Object Program Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIOwin Syntax public class Program"
  },
  "api/Unosquare.Labs.EmbedIOwin.Startup.html": {
    "href": "api/Unosquare.Labs.EmbedIOwin.Startup.html",
    "title": "Class Startup | Unosquare EmbedIO Extras",
    "keywords": "Class Startup Startup object Inheritance System.Object Startup Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.EmbedIOwin Syntax public class Startup Methods Configuration(IAppBuilder) Configure the OwinApp Declaration public void Configuration(IAppBuilder app) Parameters Type Name Description IAppBuilder app InitRoutes(IRouteTable) Initialize the Razor files Declaration public static void InitRoutes(IRouteTable table) Parameters Type Name Description IRouteTable table"
  }
}